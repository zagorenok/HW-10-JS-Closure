function sum(num1) {
  return function(num2) {
    return num1 + num2;
  }
}

const sum1 = sum(1);
sum1(2);
alert(sum(1)(2));


for (let i = 1; i <= 10; i++) {
  setTimeout(function() { 
    console.log(i);   
  }, 0);
}

//  Помилка коду в тому, що об'явлення зміної відбувається за допомогою ключового слова var. Var має хостинг(тобто перед запуском скрипта var спливає вверх файла) і не має блочної області видимості конструкції for. Java Script синхронний, при запуску кода SetTimeout 'перекинеться' в Браузерний API, а потім 'перекинеться' в кінець очереди. Оскільки var має глобальну і локальну область видимості, то буде один локальний scope, і коли при ітерації і досягне значення 10, тоді запуститься SetTimeout. Для вирішення задачі замість var використаємо let (const не можна бо це константа, яку не міняємо). Для let і const існує блочна область видимості. Вони також спливають наверх блока але потребують ініціалізації. При блочній області видимості на кожній ітерації буде створюватись свій scope. SetTimeout буде виконуватись на кожному проході циклу.

